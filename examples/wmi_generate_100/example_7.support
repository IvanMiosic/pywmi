(set-logic QF_LRA)
(declare-fun x_0 () Real)
(declare-fun x_1 () Real)
(declare-fun x_2 () Real)
(declare-fun A_0 () Bool)
(declare-fun A_1 () Bool)
(declare-fun A_2 () Bool)
(declare-fun A_3 () Bool)
(declare-fun A_4 () Bool)
(declare-fun A_5 () Bool)
(assert (and (and (<= (- 17.0) x_0) (<= x_0 25.0)) (and (<= (- 44.0) x_1) (<= x_1 44.0)) (and (<= (- 52.0) x_2) (<= x_2 16.0)) (or (< (+ (* 3.0 x_1) (* (- 9.0) x_2)) (- 9.0)) (or A_1 A_2)) (or (<= (+ (* (- 3.0) x_2) (* 2.0 x_1)) (- 8.0)) A_4) (or (and (< (+ (* 7.0 x_0) (* 4.0 x_2) (* 7.0 x_1)) 5.0) (<= (+ (* (- 3.0) x_1) (* (- 3.0) x_0)) (- 7.0)) (< (+ (* (- 9.0) x_1) (* 7.0 x_0) (* (- 8.0) x_2)) 6.0)) (or A_4 A_1 A_2)) (or (and (< (* (- 7.0) x_1) 7.0) (< (+ (* 4.0 x_0) (* (- 6.0) x_2) (* (- 1.0) x_1)) (- 5.0)) (<= (+ (* 6.0 x_1) (* (- 1.0) x_0)) 7.0)) (or A_0 A_1 A_3)) (or (and (<= (+ (* 7.0 x_1) (* 6.0 x_2)) (- 8.0)) (<= (+ (* (- 8.0) x_2) (* 7.0 x_1)) 7.0) (<= (+ (* (- 1.0) x_0) (* 9.0 x_1) (* (- 6.0) x_2)) (- 1.0))) (or A_5 A_2 A_1))))
(check-sat)
