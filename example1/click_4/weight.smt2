(set-logic QF_NRA)
(declare-fun sim_0 () Bool)
(declare-fun sim_1 () Bool)
(declare-fun sim_2 () Bool)
(declare-fun sim_3 () Bool)
(declare-fun b_0_0 () Bool)
(declare-fun b_0_1 () Bool)
(declare-fun b_1_0 () Bool)
(declare-fun b_1_1 () Bool)
(declare-fun b_2_0 () Bool)
(declare-fun b_2_1 () Bool)
(declare-fun b_3_0 () Bool)
(declare-fun b_3_1 () Bool)
(declare-fun sim_x () Real)
(declare-fun b_x_0_0 () Real)
(declare-fun b_x_0_1 () Real)
(declare-fun b_x_1_0 () Real)
(declare-fun b_x_1_1 () Real)
(declare-fun b_x_2_0 () Real)
(declare-fun b_x_2_1 () Real)
(declare-fun b_x_3_0 () Real)
(declare-fun b_x_3_1 () Real)
(assert (let ((.def_0 (* b_x_3_1 (- 1.0)))) (let ((.def_1 (+ .def_0 1.0))) (let ((.def_2 (ite b_3_1 b_x_3_1 .def_1))) (let ((.def_3 (* b_x_3_0 (- 1.0)))) (let ((.def_4 (+ .def_3 1.0))) (let ((.def_5 (ite b_3_0 b_x_3_0 .def_4))) (let ((.def_6 (* b_x_2_1 (- 1.0)))) (let ((.def_7 (+ .def_6 1.0))) (let ((.def_8 (ite b_2_1 b_x_2_1 .def_7))) (let ((.def_9 (* b_x_2_0 (- 1.0)))) (let ((.def_10 (+ .def_9 1.0))) (let ((.def_11 (ite b_2_0 b_x_2_0 .def_10))) (let ((.def_12 (* b_x_1_1 (- 1.0)))) (let ((.def_13 (+ .def_12 1.0))) (let ((.def_14 (ite b_1_1 b_x_1_1 .def_13))) (let ((.def_15 (* b_x_1_0 (- 1.0)))) (let ((.def_16 (+ .def_15 1.0))) (let ((.def_17 (ite b_1_0 b_x_1_0 .def_16))) (let ((.def_18 (* b_x_0_1 (- 1.0)))) (let ((.def_19 (+ .def_18 1.0))) (let ((.def_20 (ite b_0_1 b_x_0_1 .def_19))) (let ((.def_21 (* b_x_0_0 (- 1.0)))) (let ((.def_22 (+ .def_21 1.0))) (let ((.def_23 (ite b_0_0 b_x_0_0 .def_22))) (let ((.def_24 (<= b_x_3_1 1.0))) (let ((.def_25 (ite .def_24 1.0 0.0))) (let ((.def_26 (<= 0.0 b_x_3_1))) (let ((.def_27 (ite .def_26 1.0 0.0))) (let ((.def_28 (* .def_27 .def_25))) (let ((.def_29 (<= b_x_3_0 1.0))) (let ((.def_30 (ite .def_29 1.0 0.0))) (let ((.def_31 (<= 0.0 b_x_3_0))) (let ((.def_32 (ite .def_31 1.0 0.0))) (let ((.def_33 (* .def_32 .def_30))) (let ((.def_34 (<= b_x_2_1 1.0))) (let ((.def_35 (ite .def_34 1.0 0.0))) (let ((.def_36 (<= 0.0 b_x_2_1))) (let ((.def_37 (ite .def_36 1.0 0.0))) (let ((.def_38 (* .def_37 .def_35))) (let ((.def_39 (<= b_x_2_0 1.0))) (let ((.def_40 (ite .def_39 1.0 0.0))) (let ((.def_41 (<= 0.0 b_x_2_0))) (let ((.def_42 (ite .def_41 1.0 0.0))) (let ((.def_43 (* .def_42 .def_40))) (let ((.def_44 (<= b_x_1_1 1.0))) (let ((.def_45 (ite .def_44 1.0 0.0))) (let ((.def_46 (<= 0.0 b_x_1_1))) (let ((.def_47 (ite .def_46 1.0 0.0))) (let ((.def_48 (* .def_47 .def_45))) (let ((.def_49 (<= b_x_1_0 1.0))) (let ((.def_50 (ite .def_49 1.0 0.0))) (let ((.def_51 (<= 0.0 b_x_1_0))) (let ((.def_52 (ite .def_51 1.0 0.0))) (let ((.def_53 (* .def_52 .def_50))) (let ((.def_54 (<= b_x_0_1 1.0))) (let ((.def_55 (ite .def_54 1.0 0.0))) (let ((.def_56 (<= 0.0 b_x_0_1))) (let ((.def_57 (ite .def_56 1.0 0.0))) (let ((.def_58 (* .def_57 .def_55))) (let ((.def_59 (<= b_x_0_0 1.0))) (let ((.def_60 (ite .def_59 1.0 0.0))) (let ((.def_61 (<= 0.0 b_x_0_0))) (let ((.def_62 (ite .def_61 1.0 0.0))) (let ((.def_63 (* .def_62 .def_60))) (let ((.def_64 (* sim_x (- 1.0)))) (let ((.def_65 (+ .def_64 1.0))) (let ((.def_66 (ite sim_3 sim_x .def_65))) (let ((.def_67 (ite sim_2 sim_x .def_65))) (let ((.def_68 (ite sim_1 sim_x .def_65))) (let ((.def_69 (ite sim_0 sim_x .def_65))) (let ((.def_70 (<= sim_x 1.0))) (let ((.def_71 (ite .def_70 1.0 0.0))) (let ((.def_72 (<= 0.0 sim_x))) (let ((.def_73 (ite .def_72 1.0 0.0))) (let ((.def_74 (* .def_73 .def_71))) (let ((.def_75 (* .def_74 .def_69 .def_68 .def_67 .def_66 .def_63 .def_58 .def_53 .def_48 .def_43 .def_38 .def_33 .def_28 .def_23 .def_20 .def_17 .def_14 .def_11 .def_8 .def_5 .def_2))) .def_75)))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
