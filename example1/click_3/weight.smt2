(set-logic QF_NRA)
(declare-fun sim_0 () Bool)
(declare-fun sim_1 () Bool)
(declare-fun sim_2 () Bool)
(declare-fun b_0_0 () Bool)
(declare-fun b_0_1 () Bool)
(declare-fun b_1_0 () Bool)
(declare-fun b_1_1 () Bool)
(declare-fun b_2_0 () Bool)
(declare-fun b_2_1 () Bool)
(declare-fun sim_x () Real)
(declare-fun b_x_0_0 () Real)
(declare-fun b_x_0_1 () Real)
(declare-fun b_x_1_0 () Real)
(declare-fun b_x_1_1 () Real)
(declare-fun b_x_2_0 () Real)
(declare-fun b_x_2_1 () Real)
(assert (let ((.def_0 (* b_x_2_1 (- 1.0)))) (let ((.def_1 (+ .def_0 1.0))) (let ((.def_2 (ite b_2_1 b_x_2_1 .def_1))) (let ((.def_3 (* b_x_2_0 (- 1.0)))) (let ((.def_4 (+ .def_3 1.0))) (let ((.def_5 (ite b_2_0 b_x_2_0 .def_4))) (let ((.def_6 (* b_x_1_1 (- 1.0)))) (let ((.def_7 (+ .def_6 1.0))) (let ((.def_8 (ite b_1_1 b_x_1_1 .def_7))) (let ((.def_9 (* b_x_1_0 (- 1.0)))) (let ((.def_10 (+ .def_9 1.0))) (let ((.def_11 (ite b_1_0 b_x_1_0 .def_10))) (let ((.def_12 (* b_x_0_1 (- 1.0)))) (let ((.def_13 (+ .def_12 1.0))) (let ((.def_14 (ite b_0_1 b_x_0_1 .def_13))) (let ((.def_15 (* b_x_0_0 (- 1.0)))) (let ((.def_16 (+ .def_15 1.0))) (let ((.def_17 (ite b_0_0 b_x_0_0 .def_16))) (let ((.def_18 (<= b_x_2_1 1.0))) (let ((.def_19 (ite .def_18 1.0 0.0))) (let ((.def_20 (<= 0.0 b_x_2_1))) (let ((.def_21 (ite .def_20 1.0 0.0))) (let ((.def_22 (* .def_21 .def_19))) (let ((.def_23 (<= b_x_2_0 1.0))) (let ((.def_24 (ite .def_23 1.0 0.0))) (let ((.def_25 (<= 0.0 b_x_2_0))) (let ((.def_26 (ite .def_25 1.0 0.0))) (let ((.def_27 (* .def_26 .def_24))) (let ((.def_28 (<= b_x_1_1 1.0))) (let ((.def_29 (ite .def_28 1.0 0.0))) (let ((.def_30 (<= 0.0 b_x_1_1))) (let ((.def_31 (ite .def_30 1.0 0.0))) (let ((.def_32 (* .def_31 .def_29))) (let ((.def_33 (<= b_x_1_0 1.0))) (let ((.def_34 (ite .def_33 1.0 0.0))) (let ((.def_35 (<= 0.0 b_x_1_0))) (let ((.def_36 (ite .def_35 1.0 0.0))) (let ((.def_37 (* .def_36 .def_34))) (let ((.def_38 (<= b_x_0_1 1.0))) (let ((.def_39 (ite .def_38 1.0 0.0))) (let ((.def_40 (<= 0.0 b_x_0_1))) (let ((.def_41 (ite .def_40 1.0 0.0))) (let ((.def_42 (* .def_41 .def_39))) (let ((.def_43 (<= b_x_0_0 1.0))) (let ((.def_44 (ite .def_43 1.0 0.0))) (let ((.def_45 (<= 0.0 b_x_0_0))) (let ((.def_46 (ite .def_45 1.0 0.0))) (let ((.def_47 (* .def_46 .def_44))) (let ((.def_48 (* sim_x (- 1.0)))) (let ((.def_49 (+ .def_48 1.0))) (let ((.def_50 (ite sim_2 sim_x .def_49))) (let ((.def_51 (ite sim_1 sim_x .def_49))) (let ((.def_52 (ite sim_0 sim_x .def_49))) (let ((.def_53 (<= sim_x 1.0))) (let ((.def_54 (ite .def_53 1.0 0.0))) (let ((.def_55 (<= 0.0 sim_x))) (let ((.def_56 (ite .def_55 1.0 0.0))) (let ((.def_57 (* .def_56 .def_54))) (let ((.def_58 (* .def_57 .def_52 .def_51 .def_50 .def_47 .def_42 .def_37 .def_32 .def_27 .def_22 .def_17 .def_14 .def_11 .def_8 .def_5 .def_2))) .def_58))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
(check-sat)
