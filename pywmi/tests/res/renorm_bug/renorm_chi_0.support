(set-logic QF_LRA)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun b0 () Bool)
(declare-fun b1 () Bool)
(assert (let ((.def_0 (* (/ 4955557277556458 10672848120983113962175387379351) r1))) (let ((.def_1 (* (- (/ 11889496130820868 10672848120983113962175387379351)) r0))) (let ((.def_2 (+ .def_1 .def_0))) (let ((.def_3 (< (- (/ 34704264566699915635764136244229 48066234820641450450783326500755803424577028096)) .def_2))) (let ((.def_4 (* (- (/ 1260951194491589 87813244756370296495669082022)) r1))) (let ((.def_5 (* (/ 2823680742310999 87813244756370296495669082022) r0))) (let ((.def_6 (+ .def_5 .def_4))) (let ((.def_7 (<= .def_6 (/ 333994784794240072881468257785 131825232120994476367010284760057006002274304)))) (let ((.def_8 (or .def_7 .def_3 b0))) (let ((.def_9 (< (/ 333994784794240072881468257785 131825232120994476367010284760057006002274304) .def_6))) (let ((.def_10 (or .def_9 b1))) (let ((.def_11 (and .def_10 .def_8))) .def_11)))))))))))))
(check-sat)
