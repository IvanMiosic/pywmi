(set-logic QF_LRA)
(declare-fun r0 () Real)
(declare-fun r1 () Real)
(declare-fun b0 () Bool)
(declare-fun b1 () Bool)
(assert (let ((.def_0 (* (/ 173869972642097 169105826781262213210753441263) r1))) (let ((.def_1 (* (- (/ 2024748703415059 169105826781262213210753441263)) r0))) (let ((.def_2 (+ .def_1 .def_0))) (let ((.def_3 (< (- (/ 2149732155437553800837773043141 380792469239136073202147097703372257937588224)) .def_2))) (let ((.def_4 (* (- (/ 84609637458377 24938053927275768142835768959)) r1))) (let ((.def_5 (* (/ 1586674201011277 24938053927275768142835768959) r0))) (let ((.def_6 (+ .def_5 .def_4))) (let ((.def_7 (<= .def_6 (/ 500490857038748219959183400905 56155505187112241881026807399929329674616832)))) (let ((.def_8 (or .def_7 .def_3 b0))) (let ((.def_9 (< (/ 500490857038748219959183400905 56155505187112241881026807399929329674616832) .def_6))) (let ((.def_10 (or .def_9 b1))) (let ((.def_11 (and .def_10 .def_8))) .def_11)))))))))))))
(check-sat)
